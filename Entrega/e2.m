clear allclcclfI = imread ("./img/Calibra2.jpg");imshow(I);## Obtenemos los puntos de cada uno de los cuadradosC1P1 = [806 280];C1P2 = [620 985];C1P3 = [1343 1057];C1P4 = [1626 448];C1 = [C1P1; C1P2; C1P3; C1P4];C2P1 = [634 1469];C2P2 = [730 2236];C2P3 = [1540 2068];C2P4 = [1343 1354];C2 = [C2P1; C2P2; C2P3; C2P4];C3P1 = [1544 855];C3P2 = [1490 1656];C3P3 = [2033 1871];C3P4 = [2100 817];C3 = [C3P1; C3P2; C3P3; C3P4];## Calculamos las homografíasVP1 = [0 0];VP2 = [27 0];VP3 = [27 27];VP4 = [0 27];V = [VP1; VP2; VP3; VP4];H1 = homografia(V, C1);H1A = H1 * [1 i 0]';H1B = H1 * [1 -i 0]';H2 = homografia(V, C2);H2A = H2 * [1 i 0]';H2B = H2 * [1 -i 0]';H3 = homografia(V, C3);H3A = H3 * [1 i 0]';H3B = H3 * [1 -i 0]';## Calculamos la matriz W h1R = real(H1A);h1I = imag(H1A);W11 = [(h1I(1) * h1R(1))       (h1I(1) * h1R(2) + h1I(2) * h1R(1))       (h1I(1) * h1R(3) + h1R(1) * h1I(3))       (h1I(2) * h1R(2))       (h1I(2) * h1R(3) + h1I(3) * h1R(2))       (h1R(3) * h1I(3))]';      W12 = [(h1R(1) * h1R(1) - h1I(1) * h1I(1))       ((h1R(1) * h1R(2) + h1R(2) * h1R(1)) - (h1I(1) * h1I(2) + h1I(2) * h1I(1)))       ((h1R(1) * h1R(3) + h1R(1) * h1R(3)) - (h1I(1) * h1I(3) + h1I(1) * h1I(3)))       (h1R(2) * h1R(2) - h1I(2) * h1I(2))       ((h1R(2) * h1R(3) + h1R(3) * h1R(2)) - (h1I(2) * h1I(3) + h1I(3) * h1I(2)))       (h1R(3) * h1R(3) - h1I(3) * h1I(3))]';h2R = real(H2A);h2I = imag(H2A);W21 = [(h2I(1) * h2R(1))       (h2I(1) * h2R(2) + h2I(2) * h2R(1))       (h2I(1) * h2R(3) + h2R(1) * h2I(3))       (h2I(2) * h2R(2))       (h2I(2) * h2R(3) + h2I(3) * h2R(2))       (h2R(3) * h2I(3))]';W22 = [(h2R(1) * h2R(1) - h2I(1) * h2I(1))       ((h2R(1) * h2R(2) + h2R(2) * h2R(1)) - (h2I(1) * h2I(2) + h2I(2) * h2I(1)))       ((h2R(1) * h2R(3) + h2R(1) * h2R(3)) - (h2I(1) * h2I(3) + h2I(1) * h2I(3)))       (h2R(2) * h2R(2) - h2I(2) * h2I(2))       ((h2R(2) * h2R(3) + h2R(3) * h2R(2)) - (h2I(2) * h2I(3) + h2I(3) * h2I(2)))       (h2R(3) * h2R(3) - h2I(3) * h2I(3))]';h3R = real(H3A);h3I = imag(H3A);W31 = [(h3I(1) * h3R(1))       (h3I(1) * h3R(2) + h3I(2) * h3R(1))       (h3I(1) * h3R(3) + h3R(1) * h3I(3))       (h3I(2) * h3R(2))       (h3I(2) * h3R(3) + h3I(3) * h3R(2))       (h3R(3) * h3I(3))]';W32 = [(h3R(1) * h3R(1) - h3I(1) * h3I(1))       ((h3R(1) * h3R(2) + h3R(2) * h3R(1)) - (h3I(1) * h3I(2) + h3I(2) * h3I(1)))       ((h3R(1) * h3R(3) + h3R(1) * h3R(3)) - (h3I(1) * h3I(3) + h3I(1) * h3I(3)))       (h3R(2) * h3R(2) - h3I(2) * h3I(2))       ((h3R(2) * h3R(3) + h3R(3) * h3R(2)) - (h3I(2) * h3I(3) + h3I(3) * h3I(2)))       (h3R(3) * h3R(3) - h3I(3) * h3I(3))]';      WR = [W11;W12;W21;W22;W31;W32];[U,D,V] = svd(WR);x = V(:,end);W = x/x(end);W = [W(1) W(2) W(3); W(2) W(4) W(5); W(3) W(5) W(6)];## Calculamos la matriz de camara K a partir de la factorización de Choleskyprintf("La matriz de camara K es: \n");K = chol(inv(W))